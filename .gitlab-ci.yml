variables:
  SECURE_LOG_LEVEL: "debug"

stages:
  - build
  - notify
  - test

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository clean install"
  artifacts:
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar 
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

spotbugs-sast:
  stage: test
  rules:
    changes:
      - backend/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local       

pachca-notification-backend:
  stage: notify
  only:
    changes:
    - backend/*
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"message\":\"Андрей Зачитайлов собрал backend. Артефакт https://gitlab.praktikum-services.ru/api/v4/projects/'$CI_PROJECT_ID'/jobs/artifacts/'$CI_COMMIT_BRANCH'/download?job=build-backend-code-job\"}' https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"
  needs:
    - build-backend-code-job

pachca-notification-frontend:
  stage: notify
  only:
    changes:
    - frontend/*
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"message\":\"Андрей Зачитайлов собрал frontend. Артефакт https://gitlab.praktikum-services.ru/api/v4/projects/'$CI_PROJECT_ID'/jobs/artifacts/'$CI_COMMIT_BRANCH'/download?job=build-frontend-code-job\"}' https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"
  needs:
    - build-frontend-code-job

sonarqube-test-back:
  stage: test
  image: maven:3.8-openjdk-18
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
        -Dsonar.projectName=13__ЗАЧИТАЙЛОВАНДРЕЙ_БЭКЭНД 
        -Dsonar.projectKey=${PROJECT_KEY_BACK}
        -Dsonar.host.url=${SONARQUBE_URL}
        -Dsonar.login=${LOGIN_BACK}


sonarqube-test-front:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
          -Dsonar.projectName=13_ЗАЧИТАЙЛОВАНДРЕЙ_ФРОНТЕНД
          -Dsonar.projectKey=${PROJECT_KEY_FRONT}
          -Dsonar.sources=.
          -Dsonar.host.url=${SONARQUBE_URL}
          -Dsonar.login=${LOGIN_FRONT}
