variables:
  SECURE_LOG_LEVEL: "debug"
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - release
  - notify
  - test

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}.jar 
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

spotbugs-sast:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - backend/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local
  needs:
    - build-backend-code-job      

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-zachitaylov-andrey-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz 

pachca-notification-backend:
  stage: notify
  only:
    changes:
    - backend/*
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"message\":\"Вышла новая версия backend сосисочной — '${VERSION}'. Скачать backend можно по ссылке ${NEXUS_REPO_URL}/sausage-store-zachitaylov-andrey-backend/com/yandex/practicum/devops/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.jar\"}' https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"
  needs:
    - build-backend-code-job

pachca-notification-frontend:
  stage: notify
  only:
    changes:
    - frontend/*
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"message\":\"Вышла новая версия frontend сосисочной — '${VERSION}'. Скачать frontend можно по ссылке ${NEXUS_REPO_URL}/sausage-store-zachitaylov-andrey-frontend/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.tar.gz\"}' https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"
  needs:
    - build-frontend-code-job

sonarqube-test-back:
  stage: test
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${PROJECT_KEY_BACK}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${LOGIN_BACK}
      -Dsonar.projectName=13__ЗАЧИТАЙЛОВАНДРЕЙ_БЭКЭНД
  cache:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда


sonarqube-test-front:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectKey=${PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${LOGIN_FRONT}
      -Dsonar.projectName=13_ЗАЧИТАЙЛОВАНДРЕЙ_ФРОНТЕНД
  cache:
    paths:
      - .npm/ # для хранения зависимостей сборки фронтенда
