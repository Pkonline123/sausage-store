cache:
  paths:
    - frontend/dist/frontend

variables:
  SECURE_LOG_LEVEL: "debug"
  VERSION: 1.0.${CI_PIPELINE_ID}

before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

stages:
   - build
   - test
   - release
   - notify
   - deploy

include:
  - template: Security/SAST.gitlab-ci.yml

build-frontend:
   stage: build
   script:
     - cd frontend
     - npm install
     - npm run build
   only:
     changes:
     - frontend/*
   artifacts:
    paths:
     - frontend/dist/frontend

release-frontend:
   stage: release
   script:
     - cd frontend/dist
     - tar czvf sausage-store-${VERSION}.tar.gz frontend
     - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-zachitaylov-andrey-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz 
   only:
     changes:
     - frontend/*

sonarqube-test-front:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectKey=${PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${LOGIN_FRONT}
      -Dsonar.projectName=13_ЗАЧИТАЙЛОВАНДРЕЙ_ФРОНТЕНД
  cache:
    paths:
      - .npm/ # для хранения зависимостей сборки фронтенда

pachca-notification-frontend:
  stage: notify
  only:
    changes:
    - frontend/*
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"message\":\"Вышла новая версия frontend сосисочной — '${VERSION}'. Скачать frontend можно по ссылке '${NEXUS_REPO_URL}'/sausage-store-zachitaylov-andrey-frontend/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.tar.gz\"}' https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"
  needs:
    - release-frontend


deploy-frontend:
  stage: deploy
  script:
    - scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh
